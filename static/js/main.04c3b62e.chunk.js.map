{"version":3,"sources":["logo.svg","components/Button.js","components/Notation.js","components/Board.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","className","text","ASCII_A","charCodeAt","CHESSCASE","squareToChessCase","colum","row","piece","pieceInChessCase","isLightSquare","toUpperCase","column","isEven","n","toChessCase","position","positionInChessCase","Object","entries","square","parseInt","newSquare","posChessCase","i","j","Board","React","useState","setPosition","orientation","setOrientation","sparePieces","onDrop","move","source","sourceSquare","target","targetSquare","newPosition","handleMove","getPosition","alert","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAAe,I,yDCWAA,EARA,SAACC,GACZ,OACI,wBAAQC,QAAWD,EAAMC,QAASC,UAAU,SAA5C,SACKF,EAAMG,QCLbC,EAAU,IAAIC,WAAW,GAEzBC,EAAY,CACd,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,KAsCJC,EAAoB,SAACC,EAAOC,EAAKC,GACnC,IAAMC,EAAmBL,EAAUI,GAEnC,OAAIE,EAAcJ,EAAOC,GACdE,EAGJA,EAAiBE,eAGtBD,EAAgB,SAACE,EAAQL,GAC3B,OAAQM,EAAOD,IAAWC,EAAON,KAAWM,EAAOD,KAAYC,EAAON,IAGpEM,EAAS,SAACC,GACZ,OAAOA,EAAI,IAAM,GAGNC,EArDK,SAACC,GAYjB,IAXA,IAAMC,EAAsB,CACxB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KACtC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,MAG1C,MAA8BC,OAAOC,QAAQH,GAA7C,eAAwD,CAAnD,0BAAOI,EAAP,KAAeZ,EAAf,KACKI,EAASQ,EAAOjB,WAAW,GAAKD,EAChCK,EAAMc,SAASD,EAAO,IAEtBE,EAAYjB,EAAkBO,EAAQL,EAAKC,GAEjDS,EAAoB,EAAIV,GAAKK,EAAS,GAAKU,EAK/C,IAFA,IAAIC,EAAe,GAEXC,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBF,GAAgBN,EAAoBO,GAAGC,GAE3CF,GAAgB,KAKpB,OAFAA,EAAe,eAAiBA,EAAe,cC1CtCG,G,MAAQ,WACjB,MAAgCC,IAAMC,SAAS,IAA/C,mBAAOZ,EAAP,KAAiBa,EAAjB,KACA,EAAsCF,IAAMC,SAAS,SAArD,mBAAOE,EAAP,KAAoBC,EAApB,KA+BA,OACQ,sBAAK/B,UAAY,YAAjB,UACI,cAAC,IAAD,CACAgB,SAAYA,EACZgB,aAAe,EACfC,OAAW,SAAAC,GAAI,OAlC3B,SAAoBA,GAChB,IAAMC,EAASD,EAAKE,aACdC,EAASH,EAAKI,aACd9B,EAAQ0B,EAAK1B,aACZQ,EAASmB,GAChB,IAAMI,EAAW,2BAAOvB,GAAP,kBAAkBqB,EAAS7B,IAC5CqB,EAAYU,GA4BeC,CAAWN,IAC9BO,YAAe,SAAAzB,GAAQ,OAAIa,EAAYb,IACvCc,YAAeA,IAEX,sBAAK9B,UAAY,oBAAjB,UACI,cAAC,EAAD,CAAQD,QAAW,kBAAM8B,EAAY,UAAU5B,KAAO,sBACtD,cAAC,EAAD,CAAQF,QAAW,kBAAM8B,EAAY,KAAK5B,KAAO,gBACjD,cAAC,EAAD,CAAQF,QAAW,WA9B/BgC,EADgB,UAAhBD,EACe,QAEA,UA4B2C7B,KAAO,uBACrD,cAAC,EAAD,CAAQF,QAAW,WAxBnC2C,MAAM,wHAEN3B,EAAYC,KAsBgDf,KAAO,+BCzC5D0C,G,MARA,WACX,OACI,qBAAK3C,UAAY,SAAjB,SACI,uDCQG4C,MATf,WACE,OACE,gCACG,cAAC,EAAD,IACA,cAAC,EAAD,QCGQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04c3b62e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './../css/Button.css'\n\nconst Button = (props) => {\n    return (\n        <button onClick = {props.onClick} className=\"button\">\n            {props.text}\n        </button>\n    )\n}\n\nexport default Button\n\n","\nconst ASCII_A = 'a'.charCodeAt(0);\n\nconst CHESSCASE = { \n    'wP': 'p',\n    'bP': 'o',\n    'wN': 'n',\n    'bN': 'm',\n    'wB': 'b',\n    'bB': 'v',\n    'wR': 'r',\n    'bR': 't',\n    'wQ': 'q',\n    'bQ': 'w',\n    'wK': 'k',\n    'bK': 'l'\n};\n\nconst toChessCase = (position) => {\n    const positionInChessCase = [\n        ['$',' ','+',' ','+',' ','+',' ','+', '%'],\n        ['$','+',' ','+',' ','+',' ','+',' ', '%'],\n        ['$',' ','+',' ','+',' ','+',' ','+', '%'],\n        ['$','+',' ','+',' ','+',' ','+',' ', '%'],\n        ['$',' ','+',' ','+',' ','+',' ','+', '%'],\n        ['$','+',' ','+',' ','+',' ','+',' ', '%'],\n        ['$',' ','+',' ','+',' ','+',' ','+', '%'],\n        ['$','+',' ','+',' ','+',' ','+',' ', '%'],\n    ];\n\n    for (const [square, piece] of Object.entries(position)) {\n        const column = square.charCodeAt(0) - ASCII_A;\n        const row = parseInt(square[1]);\n\n        const newSquare = squareToChessCase(column, row, piece);\n\n        positionInChessCase[8 - row][column + 1] = newSquare;\n    }\n\n    let posChessCase = '';\n\n    for(let i = 0; i < 8; i++){\n        for(let j = 0; j < 10; j++){\n            posChessCase += positionInChessCase[i][j];\n        }\n        posChessCase += '\\n';\n    }\n\n    posChessCase = '!\"\"\"\"\"\"\"\"#\\n' + posChessCase + '/(((((((()';\n\n    return posChessCase;\n}\n\nconst squareToChessCase = (colum, row, piece) => {\n    const pieceInChessCase = CHESSCASE[piece];\n\n    if (isLightSquare(colum, row)){\n        return pieceInChessCase;\n    }\n\n    return pieceInChessCase.toUpperCase();\n}\n\nconst isLightSquare = (column, row) => {\n    return (isEven(column) && isEven(row)) || (!isEven(column) && !isEven(row));\n}\n\nconst isEven = (n) => {\n    return n % 2 === 0;\n}\n\nexport default toChessCase;\n","import Chessboard from 'chessboardjsx'\nimport Button from './Button'\nimport React from 'react'\nimport toChessCase from './Notation'\nimport './../css/Board.css'\n\nexport const Board = () => {\n    const [position, setPosition] = React.useState({});\n    const [orientation, setOrientation] = React.useState('white');\n\n    function handleMove(move) {\n        const source = move.sourceSquare;\n        const target = move.targetSquare;\n        const piece = move.piece;\n        delete position[source];\n        const newPosition = {...position, [target]: piece};\n        setPosition(newPosition);\n    }\n\n    function handleOrientation() {\n        if (orientation === 'white') {\n            setOrientation('black')\n        }else {\n            setOrientation('white')\n        }\n    }\n\n    function handleChessCase(){\n        alert('Copy and paste the following paragraph in your ' + \n        'preferred word processor (Microsoft Word, LibreOffice Writer, etc.):\\n' + \n        toChessCase(position));\n    }\n\n    /*function deleteMove(square){\n        const newPosition = position;\n        delete newPosition[square];\n        setPosition(newPosition);\n    }*/\n\n    return (\n            <div className = \"container\">\n                <Chessboard \n                position = {position} \n                sparePieces = {true}\n                onDrop = { move => handleMove(move)}\n                getPosition = {position => setPosition(position)}\n                orientation = {orientation}\n                />\n                    <div className = \"container-buttons\">\n                        <Button onClick = {() => setPosition(\"start\")} text = 'Starting position'/>\n                        <Button onClick = {() => setPosition({})} text = 'Clean board'/>\n                        <Button onClick = {() => handleOrientation()} text = 'Change orientation'/>\n                        <Button onClick = {() => handleChessCase()} text = 'Marroquin Notation'></Button>\n                    </div>  \n            </div>  \n    )\n}","import React from 'react'\nimport './../css/Header.css'\n\nconst Header = () => {\n    return (\n        <div className = \"header\">\n            <h1>CHESSBOARD EDITOR</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import logo from './logo.svg';\nimport './App.css';\nimport { Board } from './components/Board';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div>\n       <Header></Header>\n       <Board></Board>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}